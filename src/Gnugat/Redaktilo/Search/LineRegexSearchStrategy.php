<?php

/*
 * This file is part of the Redaktilo project.
 *
 * (c) LoÃ¯c Faugeron <faugeron.loic@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Gnugat\Redaktilo\Search;

/**
 * Tries to match the given regex against each lines.
 */
class LineRegexSearchStrategy extends LineSearchStrategy
{
    /** {@inheritdoc} */
    protected function findIn(array $lines, $pattern)
    {
        $found = preg_grep($pattern, $lines);
        if (empty($found)) {
            return false;
        }

        return key($found);
    }

    /** {@inheritdoc} */
    public function supports($pattern)
    {
        if (!is_string($pattern)) {
            return false;
        }

        // Remove the warning generated by preg_match when the pattern is not valid
        $errorHandler = null;
        $errorHandler = set_error_handler(function ($errno, $errstr) use (&$errorHandler) {
            if (false !== preg_match('/(delimiter|regex|regular expression|modifier|pattern)/', $errstr)) {
                return;
            }
            if ($errorHandler) {
                call_user_func_array($errorHandler, func_get_args());
            }
        });

        $supported = !(false === preg_match($pattern, ''));

        restore_error_handler();

        return $supported;
    }
}
